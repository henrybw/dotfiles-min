# taken from http://zanshin.net/2013/09/05/my-tmux-configuration/

# use UTF8
set -g utf8
set-window-option -g utf8 on

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# allow the status line to display longer session names
set -g status-left-length 40

# set Ctrl-a as the default prefix key combination
# and unbind C-b to free it up
set -g prefix C-a
unbind C-b

# use send-prefix to pass C-a through to application
bind C-a send-prefix

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# fix window creation to use the current directory
bind-key c new-window -c "#{pane_current_path}"

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -h -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}" # synonym
bind - split-window -v -c "#{pane_current_path}"

# make the current window the first window
bind T swap-window -t 1

# swap copy-mode and paste-buffer keys so that PREFIX ] enters copy mode, which
# mirrors the default telnet escape sequence.
bind ] copy-mode
bind [ paste-buffer

# map Vi movement keys as pane movement keys
# using ctrl instead of the actual keys removes
# the need to release the control key, for faster
# window selection
bind h select-pane -L
bind C-h select-pane -L
bind j select-pane -D
bind C-j select-pane -D
bind k select-pane -U
bind C-k select-pane -U
bind l select-pane -R
bind C-l select-pane -R

# and PREFIX ctrl-n and PREFIX ctrl-p to cycle windows
bind -r C-n select-window -t :+
bind -r C-p select-window -t :-

# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# some more vi key bindings
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# my custom dev window layout
bind-key R select-layout 9ac0,425x118,0,0[425x100,0,0,645,425x17,0,101,0]

# similar to above, but adapted to have an additional pane on the side for
# grepping, git work, etc. 'g' puts the extra pane on the left side, and 'G'
# puts it on the right side. the pane is sized to fit exactly 80 columns of
# text in 10pt Menlo, which leaves room for 4 additional split views of 80
# column text on a 27" iMac monitor.
bind-key g select-layout a3c1,425x118,0,0[425x100,0,0{82x100,0,0,0,342x100,83,0,645},425x17,0,101,2]
bind-key G select-layout 833a,425x118,0,0[425x100,0,0{342x100,0,0,645,82x100,343,0,0},425x17,0,101,2]

# widen the main pane for the main-vertical layout, so my prompt doesn't get
# truncated as easily.
set-window-option -g main-pane-width 115

# convenience shortcuts for the "main" layouts (I never use the window searching
# feature, so I just mirror vim's shortcut scheme).
bind-key v select-layout main-vertical
bind-key s select-layout main-horizontal

# I don't like mouse mode; just use copy mode if you want to select things
set -g mode-mouse off

# toggle mouse on with PREFIX m
bind m \
  set -g mouse-resize-pane on \;\
  set -g mouse-select-pane on \;\
  set -g mouse-select-window on \;\
  display 'Mouse: ON'

# toggle mouse off with PREFIX M
bind M \
  set -g mouse-resize-pane off \;\
  set -g mouse-select-pane off \;\
  set -g mouse-select-window off \;\
  display 'Mouse: OFF'

# set mouse on by default
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# fix terminal colors
set -g default-terminal "xterm-256color"

# fix esc delay
set -g escape-time 0

# only constrain the window size if the smaller device is active
setw -g aggressive-resize on

# fix special keys to be xterm compatible
set-window-option -g xterm-keys on

# make messages last longer
set-option -g display-time 3000
